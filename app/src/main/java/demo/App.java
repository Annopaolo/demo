/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import java.io.FileInputStream;
import java.io.InputStream;

import com.demo.DemoLexer;
import com.demo.DemoParser;

import java.io.IOException;

import org.antlr.v4.runtime.CharStreams;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.TokenStream;

import lang.environment.Environment;
import lang.models.DemoVisitorImpl;

public class App {

    public static void main(String[] args) {
        String fileName = args[args.length - 1];
        try {
            InputStream is = new FileInputStream(fileName);
            // make the lexer
            Lexer lexer = new DemoLexer(CharStreams.fromStream(is));
            // TokenStream on lexer
            TokenStream tokenStream = new CommonTokenStream(lexer);
            // make the parser on the token stream
            DemoParser parser = new DemoParser(tokenStream);
            // Tell the parser to build the AST
            parser.setBuildParseTree(true);
            // Build custom visitor
            DemoVisitorImpl visitor = new DemoVisitorImpl();
            // // Refine the AST
            // Block ast = (Block) visitor.visit(parser.block());
            // // Set a new variable environment
            // Environment env = new Environment();
            // // Run the program
            // Either<Integer, Boolean> res = ast.eval(env);
        } catch (IOException ioe) {
            System.out.println("File not found \n " + ioe);
        } catch (Exception e) {
            System.out.println("Error \n " + e);
        }
    }
}
